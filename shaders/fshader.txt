#version 330 core

in vec4 vN; 
in vec4 vV; 
in vec4 vL0; 
in vec4 vL1; 
in vec2 iTexCoord0;
in vec4 ShadowCoord;

out vec4 color;

uniform sampler2D textureMap0; 
uniform sampler2D textureMap1;
uniform sampler2DShadow shadowMap;
  
void main()
{
    vec4 mN=normalize(vN); 
	vec4 mL0=normalize(vL0);
	vec4 mL1=normalize(vL1);
	vec4 mV=normalize(vV); 
	vec4 mR0=reflect(-mL0,mN);
	vec4 mR1=reflect(-mL1,mN); 

	vec4 Md=texture(textureMap0,iTexCoord0);
	vec4 Ms=texture(textureMap1,iTexCoord0);
    vec4 Ma=vec4(0,0,0,1); 
	vec4 La=vec4(0,0,0,1); 
	vec4 Ld=vec4(1,1,1,1); 
	vec4 Ls=vec4(1,1,1,1); 
	float shininess=50; 

	float nl0=max(0,dot(mN,mL0));
	float nl1=max(0,dot(mN,mL1)); 
	float rv0=pow(max(0,dot(mN,mL0)),shininess);
	float rv1=pow(max(0,dot(mN,mL1)),shininess); 

	
	// Light emission properties
	vec4 LightColor = vec4(1);
	// Sample the shadow map 4 times
	float visibility = texture( shadowMap, vec3(ShadowCoord.xy, (ShadowCoord.z)/ShadowCoord.w) );

	color=Ma*La+Md*Ld*nl0+Ms*Ls*rv0 + Ma*La+Md*Ld*nl1+Ms*Ls*rv1 +
			visibility * Md * LightColor;
}